package stu.cn.ua.view;

import com.jgoodies.forms.layout.CellConstraints;
import com.jgoodies.forms.layout.FormLayout;
import stu.cn.ua.view.customComponents.ManagerMenuBar;
import stu.cn.ua.view.panels.RegisterNewEmployeePanel;

import javax.swing.*;
import javax.swing.border.TitledBorder;
import javax.swing.plaf.FontUIResource;
import javax.swing.text.StyleContext;
import java.awt.*;
import java.util.Locale;

public class ManagerView extends JFrame {
    private JPanel mainPanel;
    private JPanel contentPanel;
    private JPanel filePanel;
    private JPanel employeesPanel;
    private JPanel productPanel;
    private JPanel reportPanel;
    private JButton profileButton;
    private JButton supermarketButton;
    private JButton logOutButton;
    private JButton exitButton;
    private JButton registerNewEmployeeButton;
    private JButton allEmployeesButton;
    private JButton employeesByPostButton;
    private JButton showProductsButton;
    private JButton cleanExpiredButton;
    private JButton showCategoriesButton;
    private JButton endedProductsButton;
    private JButton showSalesButton;
    private JButton createAProductDeliveryButton;
    private final ManagerMenuBar menuBar;

    public ManagerView() {
        $$$setupUI$$$();
        setContentPane(mainPanel);
        setTitle("Manager Tools");
        setSize(1400, 800);
        setLocationRelativeTo(null);
        menuBar = new ManagerMenuBar();
        this.setJMenuBar(menuBar);
        setVisible(true);
        setDefaultCloseOperation(EXIT_ON_CLOSE);
    }

    public void changeJPanel(JPanel panel) {
        setContentPane(panel);
        invalidate();
        validate();
    }

    public JPanel getMainPanel() {
        return mainPanel;
    }

    public JButton getProfileButton() {
        return profileButton;
    }

    public JButton getSupermarketButton() {
        return supermarketButton;
    }

    public JButton getLogOutButton() {
        return logOutButton;
    }

    public JButton getExitButton() {
        return exitButton;
    }

    public JButton getRegisterNewEmployeeButton() {
        return registerNewEmployeeButton;
    }

    public JButton getAllEmployeesButton() {
        return allEmployeesButton;
    }

    public JButton getEmployeesByPostButton() {
        return employeesByPostButton;
    }

    public JButton getShowProductsButton() {
        return showProductsButton;
    }

    public JButton getCleanExpiredButton() {
        return cleanExpiredButton;
    }

    public JButton getShowCategoriesButton() {
        return showCategoriesButton;
    }

    public JButton getEndedProductsButton() {
        return endedProductsButton;
    }

    public JButton getShowSalesButton() {
        return showSalesButton;
    }

    public JButton getCreateAProductDeliveryButton() {
        return createAProductDeliveryButton;
    }

    public ManagerMenuBar getCustomMenuBar() {
        return menuBar;
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        mainPanel = new JPanel();
        mainPanel.setLayout(new FormLayout("fill:d:grow", "center:d:grow"));
        contentPanel = new JPanel();
        contentPanel.setLayout(new GridBagLayout());
        contentPanel.setEnabled(true);
        contentPanel.setVisible(true);
        CellConstraints cc = new CellConstraints();
        mainPanel.add(contentPanel, cc.xy(1, 1, CellConstraints.DEFAULT, CellConstraints.FILL));
        filePanel = new JPanel();
        filePanel.setLayout(new GridBagLayout());
        Font filePanelFont = this.$$$getFont$$$("Consolas", Font.PLAIN, 16, filePanel.getFont());
        if (filePanelFont != null) filePanel.setFont(filePanelFont);
        GridBagConstraints gbc;
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 1;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.fill = GridBagConstraints.BOTH;
        contentPanel.add(filePanel, gbc);
        filePanel.setBorder(BorderFactory.createTitledBorder(BorderFactory.createLineBorder(new Color(-16316665)), "File", TitledBorder.DEFAULT_JUSTIFICATION, TitledBorder.DEFAULT_POSITION, null, null));
        profileButton = new JButton();
        Font profileButtonFont = this.$$$getFont$$$("Consolas", Font.PLAIN, 16, profileButton.getFont());
        if (profileButtonFont != null) profileButton.setFont(profileButtonFont);
        profileButton.setText("Profile");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        filePanel.add(profileButton, gbc);
        final JPanel spacer1 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 0;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        filePanel.add(spacer1, gbc);
        final JPanel spacer2 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 1;
        gbc.fill = GridBagConstraints.VERTICAL;
        filePanel.add(spacer2, gbc);
        supermarketButton = new JButton();
        Font supermarketButtonFont = this.$$$getFont$$$("Consolas", Font.PLAIN, 16, supermarketButton.getFont());
        if (supermarketButtonFont != null) supermarketButton.setFont(supermarketButtonFont);
        supermarketButton.setText("Supermarket");
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 0;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        filePanel.add(supermarketButton, gbc);
        logOutButton = new JButton();
        Font logOutButtonFont = this.$$$getFont$$$("Consolas", Font.PLAIN, 16, logOutButton.getFont());
        if (logOutButtonFont != null) logOutButton.setFont(logOutButtonFont);
        logOutButton.setText("Log Out");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 2;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        filePanel.add(logOutButton, gbc);
        exitButton = new JButton();
        Font exitButtonFont = this.$$$getFont$$$("Consolas", Font.PLAIN, 16, exitButton.getFont());
        if (exitButtonFont != null) exitButton.setFont(exitButtonFont);
        exitButton.setText("Exit");
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 2;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        filePanel.add(exitButton, gbc);
        employeesPanel = new JPanel();
        employeesPanel.setLayout(new GridBagLayout());
        Font employeesPanelFont = this.$$$getFont$$$("Consolas", Font.PLAIN, 16, employeesPanel.getFont());
        if (employeesPanelFont != null) employeesPanel.setFont(employeesPanelFont);
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 1;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.fill = GridBagConstraints.BOTH;
        contentPanel.add(employeesPanel, gbc);
        employeesPanel.setBorder(BorderFactory.createTitledBorder(BorderFactory.createLineBorder(new Color(-16316665)), "Employees", TitledBorder.DEFAULT_JUSTIFICATION, TitledBorder.DEFAULT_POSITION, null, null));
        final JPanel spacer3 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 1;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        employeesPanel.add(spacer3, gbc);
        final JPanel spacer4 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 2;
        gbc.fill = GridBagConstraints.VERTICAL;
        employeesPanel.add(spacer4, gbc);
        registerNewEmployeeButton = new JButton();
        Font registerNewEmployeeButtonFont = this.$$$getFont$$$("Consolas", Font.PLAIN, 16, registerNewEmployeeButton.getFont());
        if (registerNewEmployeeButtonFont != null) registerNewEmployeeButton.setFont(registerNewEmployeeButtonFont);
        registerNewEmployeeButton.setText("Register new employee");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 3;
        gbc.gridwidth = 3;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        employeesPanel.add(registerNewEmployeeButton, gbc);
        allEmployeesButton = new JButton();
        Font allEmployeesButtonFont = this.$$$getFont$$$("Consolas", Font.PLAIN, 16, allEmployeesButton.getFont());
        if (allEmployeesButtonFont != null) allEmployeesButton.setFont(allEmployeesButtonFont);
        allEmployeesButton.setText("All employees");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        employeesPanel.add(allEmployeesButton, gbc);
        employeesByPostButton = new JButton();
        Font employeesByPostButtonFont = this.$$$getFont$$$("Consolas", Font.PLAIN, 16, employeesByPostButton.getFont());
        if (employeesByPostButtonFont != null) employeesByPostButton.setFont(employeesByPostButtonFont);
        employeesByPostButton.setText("Employees by post");
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 0;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        employeesPanel.add(employeesByPostButton, gbc);
        productPanel = new JPanel();
        productPanel.setLayout(new GridBagLayout());
        Font productPanelFont = this.$$$getFont$$$("Consolas", Font.PLAIN, 16, productPanel.getFont());
        if (productPanelFont != null) productPanel.setFont(productPanelFont);
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 2;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.fill = GridBagConstraints.BOTH;
        contentPanel.add(productPanel, gbc);
        productPanel.setBorder(BorderFactory.createTitledBorder(BorderFactory.createLineBorder(new Color(-16316665)), "Products", TitledBorder.DEFAULT_JUSTIFICATION, TitledBorder.DEFAULT_POSITION, null, null));
        showProductsButton = new JButton();
        Font showProductsButtonFont = this.$$$getFont$$$("Consolas", Font.PLAIN, 16, showProductsButton.getFont());
        if (showProductsButtonFont != null) showProductsButton.setFont(showProductsButtonFont);
        showProductsButton.setText("Show products");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        productPanel.add(showProductsButton, gbc);
        final JPanel spacer5 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 0;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        productPanel.add(spacer5, gbc);
        final JPanel spacer6 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 1;
        gbc.fill = GridBagConstraints.VERTICAL;
        productPanel.add(spacer6, gbc);
        cleanExpiredButton = new JButton();
        Font cleanExpiredButtonFont = this.$$$getFont$$$("Consolas", Font.PLAIN, 16, cleanExpiredButton.getFont());
        if (cleanExpiredButtonFont != null) cleanExpiredButton.setFont(cleanExpiredButtonFont);
        cleanExpiredButton.setText("Clean expired");
        cleanExpiredButton.setToolTipText("Clean expired products");
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 0;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        productPanel.add(cleanExpiredButton, gbc);
        showCategoriesButton = new JButton();
        Font showCategoriesButtonFont = this.$$$getFont$$$("Consolas", Font.PLAIN, 16, showCategoriesButton.getFont());
        if (showCategoriesButtonFont != null) showCategoriesButton.setFont(showCategoriesButtonFont);
        showCategoriesButton.setText("Show categories");
        showCategoriesButton.setToolTipText("Show categories list");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 2;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        productPanel.add(showCategoriesButton, gbc);
        endedProductsButton = new JButton();
        Font endedProductsButtonFont = this.$$$getFont$$$("Consolas", Font.PLAIN, 16, endedProductsButton.getFont());
        if (endedProductsButtonFont != null) endedProductsButton.setFont(endedProductsButtonFont);
        endedProductsButton.setText("Ended products");
        endedProductsButton.setToolTipText("Show products that ended");
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 2;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        productPanel.add(endedProductsButton, gbc);
        reportPanel = new JPanel();
        reportPanel.setLayout(new GridBagLayout());
        Font reportPanelFont = this.$$$getFont$$$("Consolas", Font.PLAIN, 16, reportPanel.getFont());
        if (reportPanelFont != null) reportPanel.setFont(reportPanelFont);
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 2;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.fill = GridBagConstraints.BOTH;
        contentPanel.add(reportPanel, gbc);
        reportPanel.setBorder(BorderFactory.createTitledBorder(BorderFactory.createLineBorder(new Color(-16316665)), "Reports", TitledBorder.DEFAULT_JUSTIFICATION, TitledBorder.DEFAULT_POSITION, null, null));
        showSalesButton = new JButton();
        Font showSalesButtonFont = this.$$$getFont$$$("Consolas", Font.PLAIN, 16, showSalesButton.getFont());
        if (showSalesButtonFont != null) showSalesButton.setFont(showSalesButtonFont);
        showSalesButton.setText("Show sales");
        showSalesButton.setToolTipText("Show sales in period");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        reportPanel.add(showSalesButton, gbc);
        final JPanel spacer7 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 1;
        gbc.fill = GridBagConstraints.VERTICAL;
        reportPanel.add(spacer7, gbc);
        createAProductDeliveryButton = new JButton();
        Font createAProductDeliveryButtonFont = this.$$$getFont$$$("Consolas", Font.PLAIN, 16, createAProductDeliveryButton.getFont());
        if (createAProductDeliveryButtonFont != null)
            createAProductDeliveryButton.setFont(createAProductDeliveryButtonFont);
        createAProductDeliveryButton.setText("Create a product delivery report");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 2;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        reportPanel.add(createAProductDeliveryButton, gbc);
        final JPanel spacer8 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 3;
        gbc.gridwidth = 2;
        gbc.weighty = 0.5;
        gbc.fill = GridBagConstraints.VERTICAL;
        contentPanel.add(spacer8, gbc);
        final JPanel spacer9 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 3;
        gbc.gridy = 1;
        gbc.gridheight = 3;
        gbc.weightx = 0.5;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        contentPanel.add(spacer9, gbc);
        final JPanel spacer10 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 0;
        gbc.gridwidth = 2;
        gbc.weighty = 0.5;
        gbc.fill = GridBagConstraints.VERTICAL;
        contentPanel.add(spacer10, gbc);
        final JPanel spacer11 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.gridheight = 4;
        gbc.weightx = 0.5;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        contentPanel.add(spacer11, gbc);
    }

    /**
     * @noinspection ALL
     */
    private Font $$$getFont$$$(String fontName, int style, int size, Font currentFont) {
        if (currentFont == null) return null;
        String resultName;
        if (fontName == null) {
            resultName = currentFont.getName();
        } else {
            Font testFont = new Font(fontName, Font.PLAIN, 10);
            if (testFont.canDisplay('a') && testFont.canDisplay('1')) {
                resultName = fontName;
            } else {
                resultName = currentFont.getName();
            }
        }
        Font font = new Font(resultName, style >= 0 ? style : currentFont.getStyle(), size >= 0 ? size : currentFont.getSize());
        boolean isMac = System.getProperty("os.name", "").toLowerCase(Locale.ENGLISH).startsWith("mac");
        Font fontWithFallback = isMac ? new Font(font.getFamily(), font.getStyle(), font.getSize()) : new StyleContext().getFont(font.getFamily(), font.getStyle(), font.getSize());
        return fontWithFallback instanceof FontUIResource ? fontWithFallback : new FontUIResource(fontWithFallback);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return mainPanel;
    }

}
